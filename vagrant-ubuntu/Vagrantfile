# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANT_UBUNTU_NAME = ENV['VAGRANT_UBUNTU_NAME'] || "vagrant-ubuntu"
VAGRANT_UBUNTU_RAM = ENV['VAGRANT_UBUNTU_RAM'] || "4096"
VAGRANT_UBUNTU_CORES = ENV['VAGRANT_UBUNTU_CORES'] || 2

VAGRANT_UBUNTU_SSH_HOST = ENV['VAGRANT_UBUNTU_SSH_HOST'] || "127.0.0.1"
VAGRANT_UBUNTU_SSH_PORT = ENV['VAGRANT_UBUNTU_SSH_PORT'] || "22"
VAGRANT_UBUNTU_SSH_USERNAME = ENV['VAGRANT_UBUNTU_SSH_USERNAME'] || "vagrant"
VAGRANT_UBUNTU_SSH_PASSWORD = ENV['VAGRANT_UBUNTU_SSH_PASSWORD'] || "vagrant"

VAGRANT_UBUNTU_IP = ENV['VAGRANT_UBUNTU_IP'] || ''
VAGRANT_UBUNTU_MAC = ENV['VAGRANT_UBUNTU_MAC'] || ''
VAGRANT_UBUNTU_DNS = ENV['VAGRANT_UBUNTU_DNS'] || ''

Vagrant.configure(2) do |config|

  config.vm.box = "ubuntu/trusty64"

  config.vm.network "private_network", ip: "192.168.50.4"
  if VAGRANT_UBUNTU_IP.length == 0
      config.vm.network "public_network"
  else
      config.vm.network "public_network", ip: VAGRANT_UBUNTU_IP, mac: VAGRANT_UBUNTU_MAC
  end

  #config.ssh.host = VAGRANT_UBUNTU_SSH_HOST
  #config.ssh.port = VAGRANT_UBUNTU_SSH_PORT
  #config.ssh.username = VAGRANT_UBUNTU_SSH_USERNAME
  #config.ssh.password = VAGRANT_UBUNTU_SSH_PASSWORD

  config.vm.provider "virtualbox" do |vb|
      vb.name = VAGRANT_UBUNTU_NAME
      vb.cpus = VAGRANT_UBUNTU_CORES
      vb.memory = VAGRANT_UBUNTU_RAM
  end

  config.vm.synced_folder "data/", "/data"

  config.vm.provision "shell", args: [VAGRANT_UBUNTU_DNS], inline: <<-SHELL
      if [ -n "$1" ]; then
          echo "nameserver $1" >> /etc/resolv.conf
      fi
      sudo apt-get update
  SHELL

  config.vm.provision "docker" do |d|
      d.run "rancher", image: "rancher/server", args: "-d -v /data/rancher/mysql:/var/lib/mysql -v /data/rancher/cattle:/var/lib/cattle --restart=always -p 8080:8080"
  end

  config.vm.provision "shell", inline: <<-SHELL
    if [ $(grep -c 'tcp://0.0.0.0:2376' /etc/default/docker) -eq "0" ]
    then
      echo 'DOCKER_OPTS="-H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock ${DOCKER_OPTS}"' >> /etc/default/docker
    fi
    service docker restart
  SHELL

end
